{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\fnil\fprq0\fcharset0 Arial;}{\f6\fnil\fprq0\fcharset0 Consolas;}{\f7\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f8\fnil\fprq2\fcharset0 Mangal;}{\f9\fnil\fprq0\fcharset128 Mangal;}}
{\colortbl;\red0\green0\blue0;\red153\green0\blue255;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\dbch\af7\dbch\af8\afs28\loch\f4\fs28 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\sb0\sa140 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\sb0\sa140\dbch\af9 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af9\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af9 Index;}
}{\info{\creatim\yr2014\mo12\dy8\hr13\min10}{\revtim\yr2014\mo12\dy8\hr13\min36}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern67305730}}\deftab709
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\sb0\sa283{{\*\bkmkstart docs-internal-guid-abcf165d-2bd4-3d34-9c48-bb30f84588cf}{\*\bkmkend docs-internal-guid-abcf165d-2bd4-3d34-9c48-bb30f84588cf}\rtlch \ltrch\loch
\line \line \line \line \line \line \line \line \line \line \line \line }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Adam Mejia}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
CS02 Final}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Project Abstraction}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
12/3/2014}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140{\rtlch \ltrch\loch
\line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line \line }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Motivation:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The goal is to actively seek the brightest source of light in an environment. I reasoned that this type of system could be used in a variety of applications. Solar panel efficiency can be increased by keeping the panels orthogonal to the sun. Missile systems could be programmed to follow an infrared heat source. Cameras could be directed to follow heat/light sources such as vehicles and life forms.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Problem Statement:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Simply put, we need to get our device to point in the direction that gives us ideal data from the sensor. For the purposes of this project}{\scaps0\caps0\cf2\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
,}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
our ideal data would be high light level readings. The pointing will require motion and the direction will require a sensor and a means by which to interpret ideal conditions.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Approach:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Two micro servos attached to a gimbal provide robotic motion. The motion of the sensor is restricted by a spherical coordinate system. Photoresistors are the sensor and data is measured by the resistance generated by exposure to light. An Arduino microcontroller interprets sensor data and controls the motion of the micro servos accordingly.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The following is the header declaration of my first version of the scan:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
#include <Servo.h> //THIS LIBRARY CONTAINS THE SERVO FUNCTIONS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//GLOBAL VARIABLES}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//SERVO OBJECTS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Servo panServo;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Servo tiltServo;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//SERVO POSITION}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
int panPos, tiltPos;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int littlestep(5);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int bigstep(10);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//PINS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int lightPin = 0;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int panPin = 9;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int tiltPin = 3;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//SENSOR READINGS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
double sensor1, sensor2, sensor3, sensor4;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
I found that when programming for the Arduino it was best practice to declare things such as pins as constant global variables since we will be calling these values in multiple functions. The pin numbers correspond to the labeled pins on the Arduino board which can be configured for input or for output of data. Littlestep and bigstep are \~the increments of degrees that we will be moving our servos in. A control object is created for each servo. The dot operator is used with the Servo objects to utilize member functions including attaching the servos and writing data to the servos.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
In order to establish communication with the servos and sensor I created the initialize function}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void initialize()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//INITIALIZE SERIAL @ 9600 (BAUD)}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.begin(9600);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//ATTACH PAN AND TILT SERVOS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
pinMode(panPin, OUTPUT);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
pinMode(tiltPin, OUTPUT);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
pinMode(lightPin, INPUT);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.attach(panPin);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.attach(tiltPin);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
This function performs some necessary actions to set up protocols for I/O streams with the servo and sensor. I was able to reuse this function in the other iterations of the scan. The attach member function establishes the connection with the pin specified as a parameter.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void calibrate()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.print("Calibrating...");}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.println();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.print("Testing 0");}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.println();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos = 0;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos = 0;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(15000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.print("Testing 180");}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos = 180;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos = 180;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(5000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
Serial.print("Testing 90");}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos = 90;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos = 90;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(5000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos = 0;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos = 0;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(5000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
This calibrate function was something I put together in order to quickly test the range of motion of the servos for calibration. The servos are set to the [0\u176\'b0,0\u176\'b0] position (theta = 0\u176\'b0 & phi = 0\u176\'b0) and a 15 second delay allows me to physically adjust the gimbal accordingly. The servos are then set to the [180\u176\'b0,180\u176\'b0] position with a delay for adjustments. Finally the servos are set to [90\u176\'b0,90\u176\'b0] as a final check for proper calibration and then they are returned to the [0\u176\'b0,0\u176\'b0] position.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void panTwitch()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor1 = analogRead(lightPin); \~\~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos + littlestep); \~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(1000); \~\~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor2 = analogRead(lightPin); \~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(1000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void tiltTwitch()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor3 = analogRead(lightPin);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos + littlestep);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(1000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor4 = analogRead(lightPin);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
delay(1000);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
In order to compare relative light levels we need data. The twitch functions give us our comparison data. We use the dot operator with our servo object to execute the write function with our servo. The servo.write() function conveniently accepts values ranging from 0\u176\'b0 to 180\u176\'b0 which directly translates to the angle the servo is positioned at. If the servos are positioned at [90\u176\'b0,90\u176\'b0] and we execute both twitch functions we will be sampling light levels four times and we will receive the following data: }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor_data1 @ =}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
90\u176\'b0}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor_data2 @ =( 90\u176\'b0+littlestep) = 95\u176\'b0}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor_data3 @ = 90\u176\'b0}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
sensor_data4 @ =( 90\u176\'b0+littlestep) = 95\u176\'b0}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The servos are returned to their initial positions after each instance of twitch() and the following check functions are executed}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void panCheck()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
if (sensor1 > sensor2 )}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos += bigstep;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
else if (sensor1 < sensor2)}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panPos -= bigstep;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panServo.write(panPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void tiltCheck()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
if (sensor3 > sensor4 )}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos += bigstep;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
else if (sensor3 < sensor4)}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltPos -= bigstep;}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltServo.write(tiltPos);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li0\ri0\lin0\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
These check() functions compare their two respective light level readings and tell the servos to take a bigstep in the direction that gave higher light level readings.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The Arduino operates on two main void functions, setup() and loop(). The setup() function will run once and the loop() function will run infinitely until the device is powered down.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//SETUP FUNCTION}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void setup()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//INITIALIZE SERVO OBJECTS}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
initialize();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//GREETING AND CALIBRATION}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
calibrate();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
greeting(); \~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
//LOOP FUNCTION}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void loop()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panTwitch();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
panCheck();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltTwitch();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
tiltCheck();}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
After the device is setup the loop function will continuously twitch using littlestep and check/adjust using bigstep with both servos. }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140{\rtlch \ltrch\loch
\line \line }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Results:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The first version (continuous looping scan) provides very jerky motion and the device seems to be frantically struggling to find the brightest light source. A problem that I ran into was the domain of the servos was being exceeded by my }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
check()}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
functions. When I ran the program, the device would run normally and then at a certain point it would appear to be getting stuck in position. I discovered that my }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
check()}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
functions were allowing my }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
panPos}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
and }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
tiltPos}{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch\loch
 }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
values to exceed their functional domain. This bug which can be remedied with some while loops or if statements.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140{\rtlch \ltrch\loch
\line }
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs22\loch\f5
Conclusions:}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
The experiment also led me to conclude that a far better solution to the twitch functions would be using multiple photoresistors (5 would be ideal) positioned in a diamond with slight variation in their angles similar to what is depicted below.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
O \~\~\~\~\~\~\~\~\~\~\~\~0}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
O O O \~\~\~\~\~1 2 3}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\qc\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
O \~\~\~\~\~\~\~\~\~\~\~\~4}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl273\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
This configuration would allow us to sample 5 levels simultaneously which could be stored as an array with the following code.}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
const int numLevels(5);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
float levels[numLevels];}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
int count(0);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2160\ri0\lin2160\rin0\fi0\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
int lightPins[numLevels] = \{v,w,x,y,z\} }{\scaps0\caps0\cf1\strike0\i\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
/*\u8592\'3f- v,w,x,y,z should correspond to the actual pins they are connected to */}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
void measureLevels()}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
for(count = 0; count < numLevels; count++)}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~\~\~ \~\~\~ }{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\{}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
levels[count] = analogRead(lightPins[count]);}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li2880\ri0\lin2880\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\li1440\ri0\lin1440\rin0\fi720\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\ulnone\ulc0\animtext0\rtlch \ltrch
\~}{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b\animtext0\rtlch \ltrch\loch\fs19\loch\f6
\}}
\par \pard\plain \s16\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\sb0\sa140\sl240\slmult1\sb0\sa0\ltrpar{\scaps0\caps0\cf1\strike0\i0\ulnone\ulc0\b0\animtext0\rtlch \ltrch\loch\fs22\loch\f5
I ended up creating a second version of this project which did not actively seek the brightest source of light but rather took 32,761 light level readings and streamed data to the serial port. The entire scan took 56 minutes to complete and was terribly inefficient for an application such as actively tracking a light source. I was able to take the large data set and plot it in 3 dimensions by assigning each point in space an RGB value based on light levels so that light on the sphere would be represented as a varying shade of red. I posited that this type of system could have a different application such as mapping light levels on a performance stage or in an art gallery. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par }